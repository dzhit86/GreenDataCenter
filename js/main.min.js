"use strict";$(document).ready(function(){function e(e){var t=$(".section-top__center"),s=$(".section-top__slider");1024<e?(t.addClass("glass-field"),s.removeClass("glass-field")):(s.addClass("glass-field"),t.removeClass("glass-field"))}e($(window).width()),$(".slider-top").slick({slidesToShow:1,arrows:!1,dots:!0,dotsClass:"slider-top__dots",customPaging:function(e,t){return""}});var t=$(".header-menu"),s=$(".header__burger");function n(){s.add(t).removeClass("_active")}s.on("click",function(e){e.preventDefault(),s.add(t).toggleClass("_active")}),$(window).resize(function(){1182<=$(this).outerWidth()&&n(),e($(window).width())}),$(window).on("scroll",function(){$(window).scrollTop()>$(window).height()?$(".scroll-top").css("display","flex"):$(".scroll-top").css("display","none")}),$(document).mouseup(function(e){t.is(e.target)||0!==t.has(e.target).length||s.is(e.target)||0!==s.has(e.target).length||n()}),$(function(){$("a[data-smooth]").on("click",function(e){e.preventDefault();var t=$(this).attr("href");if($(t).length){var s=$(t).outerHeight()-$(t).height()-100,n=$(t).offset().top+s;$("html, body").animate({scrollTop:n},1e3)}else alert("Нет такой секции!")})}),function(e){function s(e){return new RegExp("(^|\\s+)"+e+"(\\s+|$)")}var n,o,i;function t(e,t){(n(e,t)?i:o)(e,t)}i="classList"in document.documentElement?(n=function(e,t){return e.classList.contains(t)},o=function(e,t){e.classList.add(t)},function(e,t){e.classList.remove(t)}):(n=function(e,t){return s(t).test(e.className)},o=function(e,t){n(e,t)||(e.className=e.className+" "+t)},function(e,t){e.className=e.className.replace(s(t)," ")});var a={hasClass:n,addClass:o,removeClass:i,toggleClass:t,has:n,add:o,remove:i,toggle:t};"function"==typeof define&&define.amd?define(a):e.classie=a}(window),function(){var e;function t(e){classie.add(e.target.parentNode,"input--filled")}function s(e){""===e.target.value.trim()&&classie.remove(e.target.parentNode,"input--filled")}String.prototype.trim||(e=/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,String.prototype.trim=function(){return this.replace(e,"")}),[].slice.call(document.querySelectorAll(".form__field")).forEach(function(e){""!==e.value.trim()&&classie.add(e.parentNode,"input--filled"),e.addEventListener("focus",t),e.addEventListener("blur",s)})}(),$(".section-top__topbg").parallax({posX:"center",posY:"center",src:"img/bg-header.webp",bleed:50,speed:-.2});var i=!0,a=".section-stat";$(window).on("scroll load resize",function(){if(!i)return!1;var e=$(window).scrollTop(),t=$(a).offset().top,s=$(window).height(),n=$(document).height(),o=$(a).outerHeight();(t<=e+500||s+e==n||o+t<s)&&($(".section-stat__value").css("opacity","1"),$(".section-stat__value").spincrement({thousandSeparator:"",duration:4e3}),i=!1)})});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,